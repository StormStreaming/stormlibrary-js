import { StormLibrary } from "../StormLibrary";
import { AbstractPlayer } from "./AbstractPlayer";
import { IPlayer } from "./IPlayer";
import { IWebRTC } from "./IWebRTC";
import { VideoContainer } from "./VideoContainer";
export declare class WebRTCPlayer extends AbstractPlayer implements IPlayer, IWebRTC {
    private readonly LOG_ACTIVITY;
    private mungeSDP;
    private peerConnection;
    private peerConnectionConfig;
    private connection;
    private streamTimeout;
    private streamInfo;
    private userData;
    constructor(main: StormLibrary, video: VideoContainer);
    addStreamSource(sourceItem: any, addAndPlay: boolean): boolean;
    setQuality(sourceName: string): boolean;
    start(): void;
    stop(): void;
    onSocketOpen(event: any): void;
    onVideoPlay(): void;
    onVideoPause(): void;
    onVideoLoad(): void;
    onVideoStop(): void;
    onVideoMetadata(event: any): void;
    onTimeUpdate(event: any): void;
    onVolumeChange(event: any): void;
    onSocketMessage(event: any): void;
    onOKStatus(msgJSON: any): void;
    onWebRTCError(error: any, thisRef: WebRTCPlayer): void;
    onSocketClose(event: any): void;
    onSocketError(event: any, shouldReconnect: boolean, reconnectTime: number): void;
    onAllServersFailed(): void;
    private onIceCandidate;
    private onRemoteTrack;
    private onConnectionStateChange;
    private sendPlayGetOffer;
    private onDescription;
    private onPeerConnectionError;
    onConnectionTimeout(): void;
    getVideoContainer(): VideoContainer;
    restart(): void;
    destroy(force?: boolean): void;
    togglePlay(): void;
    getAbsoluteTime(): number;
    getTime(): number;
}
