import { IConfig } from "./IConfig";
import { ProtocolType } from "./enum/ProtocolType";
import { BufferConfig } from "./BufferConfig";
import { StorageConfig } from "./StorageConfig";
import { VideoConfig } from "./VideoConfig";
import { DebugConfig } from "./DebugConfig";
import { AudioConfig } from "./AudioConfig";
import { Logger } from "../logger/Logger";
export declare class SettingsConfig implements IConfig {
    private readonly PRINT_ON_STARTUP;
    private settingsConfig;
    private restartOnError;
    private reconnectTime;
    private autoStart;
    private startOnDOMReady;
    private iOSOnDomReadyFix;
    private enabledProtocols;
    private bufferConfig;
    private storageConfig;
    private videoConfig;
    private debugConfig;
    private audioConfig;
    private presetConfig;
    private restartOnFocus;
    constructor(config: any);
    parse(config: any): void;
    getEnabledProtocols(): Array<ProtocolType>;
    getBufferConfig(): BufferConfig;
    getAudioConfig(): AudioConfig;
    getVideoConfig(): VideoConfig;
    getIfShouldRestartOnErrror(): boolean;
    getRecoonectTime(): number;
    getIfAutoStart(): boolean;
    getIfRestartOnFocus(): boolean;
    getDebugConfig(): DebugConfig;
    getStorageConfig(): StorageConfig;
    setConfig(config: any): void;
    getIfStartOnDOMReadyEnabled(): boolean;
    getIfIOSOnDomStartFixEnabled(): boolean;
    print(logger: Logger, force?: boolean): void;
}
