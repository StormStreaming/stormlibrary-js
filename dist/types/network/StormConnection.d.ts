import { AbstractSocket } from "./AbstractSocket";
import { StormLibrary } from "../StormLibrary";
import { IPlayer } from "../player/IPlayer";
import { ISourceItem } from "../model/ISourceItem";
export declare class StormConnection extends AbstractSocket {
    private static readonly STORM_WEBSOCKET_HARNESS;
    private main;
    private type;
    private currServer;
    private serverInfo;
    private appData;
    private isAuthorized;
    private reconnectTimer;
    private player;
    private source;
    private coreReadyDispatched;
    private wasPlaybackStopped;
    private lastState;
    constructor(main: StormLibrary);
    initialize(): void;
    protected onSocketOpen(event: Event): void;
    protected onSocketError(event: Event): void;
    protected onSocketClose(event: CloseEvent): void;
    protected onSocketMessage(event: MessageEvent): void;
    private onStreamStatus;
    sendPauseRequest(): void;
    sendPlayRequest(): void;
    private createURL;
    private initiateReconnect;
    private subscribeToStream;
    reportLatency(latency: number): void;
    private pickServerFromList;
    attachPlayer(player: IPlayer): void;
    requestPlayback(source: ISourceItem): void;
    newSubscription(streamKey: string): void;
    reinitialize(): void;
    getIfAuthorized(): boolean;
    getSourceItem(): ISourceItem | null;
    isConnectionActive(): boolean;
    destroy(): void;
}
